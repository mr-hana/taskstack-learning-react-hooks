{"version":3,"sources":["styles/theme.js","Util.js","ScheduleGenerator.js","context/index.js","components/Input.js","components/Term.js","context/CurrentTaskContext.js","components/TaskContent.js","components/Select.js","components/Durations.js","components/TaskForm.js","components/TaskList.js","components/Month.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["theme","borderColor","range","start","end","seed","arguments","length","undefined","Array","from","value","key","formatDate","date","formatString","dateFns","format","locale","ja","createDays","beginDate","endDate","differenceInCalendarDays","map","day","addDays","ScheduleGenerator","schedule","index","current","createSchedule","content","isShow","nextFree","isWeekend","init","forEach","push","pm","addHours","add","duration","closure","i","generate","tasks","task","getSchedule","list","item","Object","assign","TasksContext","React","createContext","TasksProvider","Provider","today","Date","termInitilState","startOfMonth","endOfMonth","addMonths","TermContext","TermProvider","ScheduleContext","ScheduleProvider","_ref","children","_useState","useState","_useState2","slicedToArray","setTasks","_useState3","_useState4","term","setTerm","_useState5","_useState6","setSchedule","useEffect","scheduleGenerator","react_default","a","createElement","Base","styled","input","_templateObject","Input","props","Container","div","Term_templateObject","Label","span","_templateObject2","InputWrapper","_templateObject3","Term","_useContext","useContext","handleChange","name","e","target","prevState","updatedValues","objectSpread","components_Input","type","defaultValue","onChange","currentTaskInitialState","CurrentTaskContext","TaskContent","currentTask","setCurrentTask","select","Select_templateObject","Select","Select_Base","Durations","components_Select","val","toFixed","TaskForm_templateObject","FormWrapper","TaskForm_templateObject2","TaskForm_templateObject3","Button","button","_templateObject4","TaskForm","TaskForm_Container","TaskForm_Input","components_TaskContent","context","components_Durations","onClick","concat","toConsumableArray","TaskList","taskItems","Border","Month_templateObject","Month_templateObject2","Header","Month_templateObject3","DateWrapper","Month_templateObject4","holiday","css","_templateObject5","_templateObject6","StyledCell","_templateObject7","DateCell","_templateObject8","PlanCell","_templateObject9","Month","days","year","month","firstDate","createOneMonthDays","console","log","javascriptMonth","filteredSchedule","filter","getMonth","monthlySchedule","isSameDay","dayPlan","am","isHoliday","halfday","getHours","Month_Container","plan","getDate","Calendar_templateObject","Calendar","diffMonths","differenceInCalendarMonths","beginMonth","months","components_Month","getTime","getFullYear","Calendar_Container","App_templateObject","App_templateObject2","CalendarWrapper","App_templateObject3","App","styled_components_browser_esm","context_Provider","App_Container","App_FormWrapper","components_Term","components_TaskForm","components_TaskList","components_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4JAIeA,EAJD,CACZC,YAAa,gDCER,SAASC,EAAOC,EAAOC,GAAe,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAClCC,GAAUH,EAAMD,EAAQE,GAAQA,EACtC,OAAOI,MAAMC,KAAK,CAAEH,OAAQA,GAAU,SAACI,EAAOC,GAAR,OAAgBT,EAASE,EAAOO,IAOjE,SAASC,EAAWC,EAAMC,GAE/B,OAAOC,IAAQC,OAAOH,EAAMC,EAAc,CAACG,OAAQC,MAG9C,SAASC,EAAWC,EAAWC,GAMpC,OAJapB,EAAM,EADFc,IAAQO,yBAAyBD,EAASD,IAC3BG,IAAI,SAAAC,GAClC,OAAOT,IAAQU,QAAQL,EAAWI,KCjBtC,IAmFeE,EAnFW,SAAUN,EAAWC,GAC7C,IAAMM,EAAW,SAAUP,EAAWC,GACpC,IAEIM,EAAW,GACXC,EAAQ,KACRC,EAAU,KACRC,EAAiB,SAAAN,GACrB,MAAO,CACLX,KAAMW,EACNO,QAAS,GACTC,QAAQ,IAaNC,EAAW,SAAXA,IARU,OAAVL,IACFA,GAAS,GAIXC,EAAUF,IADVC,GAMIb,IAAQmB,UAAUL,EAAQhB,MAC5BoB,IAIsB,KAApBJ,EAAQE,SACVE,KAKJ,MAAO,CACLE,KAAM,WACJR,EAAW,GACXR,EAAWC,EAAWC,GAASe,QAAQ,SAAAZ,GACrCG,EAASU,KAAKP,EAAeN,IAC7B,IAAMc,EAAKvB,IAAQwB,SAASf,EAAK,IACjCG,EAASU,KAAKP,EAAeQ,MAG/BV,EAAQ,MAEVY,IAAK,SAAUT,EAASU,GACtBxC,EA/CyB,EA+CIwC,EA9CZ,OA8CoDL,QAAQ,SAAAhC,GAC3E6B,IACAJ,EAAQE,QAAUA,EAjDK,IAkDnB3B,IACFyB,EAAQG,QAAS,MAIvBI,QAAS,SAAUM,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAASrB,OAAQqC,IACnCD,EAAQf,EAASgB,GAAIA,KA1DZ,CA8DfvB,EAAWC,GAEb,MAAO,CACLuB,SAAU,SAAUC,GAClBlB,EAASQ,OACTU,EAAMT,QAAQ,SAAAU,GACZnB,EAASa,IAAIM,EAAKf,QAASe,EAAKL,aAGpCM,YAAa,WACX,IAAMC,EAAO,GAKb,OAJArB,EAASS,QAAQ,SAAAa,GACfD,EAAKX,KAAKa,OAAOC,OAAO,GAAIF,MAGvBD,KC9EAI,EAAeC,IAAMC,cAAc,IACnCC,EAAgBH,EAAaI,SAEpCC,EAAQ,IAAIC,KAIZC,EAAkB,CACtBvC,UAJgBL,IAAQ6C,aAAaH,GAKrCpC,QAJcN,IAAQ8C,WAAW9C,IAAQ+C,UAAUL,EAAO,KAM/CM,EAAcV,IAAMC,cAAcK,GAClCK,EAAeD,EAAYP,SAE3BS,EAAkBZ,IAAMC,cAAc,IACtCY,EAAmBD,EAAgBT,SAEnCA,EAAW,SAAAW,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACdC,mBAAS,IADKC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACjCxB,EADiC0B,EAAA,GAC1BE,EAD0BF,EAAA,GAAAG,EAEhBJ,mBAASX,GAFOgB,EAAAzB,OAAAsB,EAAA,EAAAtB,CAAAwB,EAAA,GAEjCE,EAFiCD,EAAA,GAE3BE,EAF2BF,EAAA,GAAAG,EAGRR,mBAAS,IAHDS,EAAA7B,OAAAsB,EAAA,EAAAtB,CAAA4B,EAAA,GAGjCnD,EAHiCoD,EAAA,GAGvBC,EAHuBD,EAAA,GAWxC,OANAE,oBAAU,WACR,IAAMC,EAAoBxD,EAAkBkD,EAAKxD,UAAWwD,EAAKvD,SACjE6D,EAAkBtC,SAASC,GAC3BmC,EAAYE,EAAkBnC,gBAC7B,CAAC6B,EAAM/B,IAGRsC,EAAAC,EAAAC,cAACnB,EAAD,CAAkBxD,MAAO,CAAEiB,aACzBwD,EAAAC,EAAAC,cAACrB,EAAD,CAActD,MAAO,CAAEkE,OAAMC,YAC3BM,EAAAC,EAAAC,cAAC9B,EAAD,CAAe7C,MAAO,CAAEmC,QAAO4B,aAC1BL,yIChCb,IAIMkB,EAAOC,IAAOC,MAAVC,KAMKC,EAVD,SAACC,GACb,OAAQR,EAAAC,EAAAC,cAACC,EAASK,uVCEpB,IA4BMC,EAAYL,IAAOM,IAAVC,KAQTC,EAAQR,IAAOS,KAAVC,KAKLC,EAAeX,IAAOM,IAAVM,KAIHC,EA7CF,WAAM,IAAAC,EACSC,qBAAWvC,GAA7Ba,EADSyB,EACTzB,KAAMC,EADGwB,EACHxB,QACR0B,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9B,IAAM/F,EAAQ,IAAIgD,KAAK+C,EAAEC,OAAOhG,OAChCmE,EAAQ,SAAA8B,GAEN,IAAMC,EAAa1D,OAAA2D,EAAA,EAAA3D,CAAA,GAAOyD,GAE1B,OADAC,EAAcJ,GAAQ9F,EACfkG,MAIX,OAAQzB,EAAAC,EAAAC,cAACO,EAAD,KACNT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAD,iCACAZ,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,KAAK,OAAOC,aAAcpG,EAAWgE,EAAKxD,UAAW,cAAe6F,SAAUV,EAAa,iBAGtGpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAD,iCACAZ,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,KAAK,OAAOC,aAAcpG,EAAWgE,EAAKvD,QAAS,cAAe4F,SAAUV,EAAa,yBC1B3FW,EAA0B,CACrCnF,QAAS,GACTU,SAAU,IAEC0E,EAAqB9D,IAAMC,cAAc4D,GCUvCE,EAZK,SAAAzB,GAAS,IAAAU,EACaC,qBAAWa,GAA3CE,EADmBhB,EACnBgB,YAAaC,EADMjB,EACNiB,eAQrB,OAAQnC,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,KAAK,OAAOrG,MAAO2G,EAAYtF,QAASkF,SAPlC,SAAAR,GACnB,IAAM1E,EAAU0E,EAAEC,OAAOhG,MACzB4G,EAAe,SAAAX,GACb,OAAOzD,OAAA2D,EAAA,EAAA3D,CAAA,GAAKyD,EAAZ,CAAuB5E,+ICN7B,IAIMuD,EAAOC,IAAOgC,OAAVC,KAMKC,EAVA,SAAC9B,GACd,OAAQR,EAAAC,EAAAC,cAACqC,EAAS/B,ICgBLgC,EAfG,SAAAhC,GAAS,IAAAU,EACeC,qBAAWa,GAA3CE,EADiBhB,EACjBgB,YAAaC,EADIjB,EACJiB,eAQrB,OAASnC,EAAAC,EAAAC,cAACuC,EAAD,CAAQlH,MAAO2G,EAAY5E,SAAUwE,SAPzB,SAAAR,GACnB,IAAMhE,EAAWgE,EAAEC,OAAOhG,MAC1B4G,EAAe,SAAAX,GACb,OAAOzD,OAAA2D,EAAA,EAAA3D,CAAA,GAAIyD,EAAX,CAAsBlE,iBAKvBxC,EAAM,GAAK,EAAK,IAAKsB,IAAI,SAAAsG,GAAG,OAC3B1C,EAAAC,EAAAC,cAAA,UAAQ1E,IAAKkH,EAAKnH,MAAOmH,EAAIC,QAAQ,IAAKD,EAAIC,QAAQ,2dCT5D,IA6BMlC,EAAYL,IAAOM,IAAVkC,KAKTC,EAAczC,IAAOM,IAAVoC,KAMXvC,EAAQH,IAAOM,IAAVqC,KAKLC,GAAS5C,IAAO6C,OAAVC,KAKGC,GAlDE,WAAM,IAAAjE,EACiBC,mBAAS4C,GAD1B3C,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACdgD,EADc9C,EAAA,GACD+C,EADC/C,EAAA,GAEbE,EAAa6B,qBAAWlD,GAAxBqB,SAQR,OACEU,EAAAC,EAAAC,cAACkD,EAAD,KACEpD,EAAAC,EAAAC,cAAC8B,EAAmB3D,SAApB,CAA6B9C,MAAO,CAAE2G,cAAaC,mBACjDnC,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAACmD,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAD,CAAaC,QAASvB,KAExBhC,EAAAC,EAAAC,cAACmD,EAAD,KACErD,EAAAC,EAAAC,cAACsD,EAAD,CAAWD,QAASvB,OAI1BhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8C,GAAD,CAAQS,QAAS,kBAnBrBnE,EAAS,SAAAkC,GACP,SAAAkC,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAWyD,GAAX,CAAsBU,WAExBC,EAAeJ,KAgBX,mBCfO6B,GAZE,WAAM,IAEfC,EADY1C,qBAAWlD,GAArBP,MACgBtB,IAAI,SAACuB,EAAMlB,GAAP,OAC1BuD,EAAAC,EAAAC,cAAA,OAAK1E,IAAKiB,GAAQkB,EAAKf,QAAvB,MAAmCe,EAAKL,YAE1C,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM2D,u+BCJZ,IA6CMC,GAAS1D,IAAOM,IAAVqD,KAGM,SAAAvD,GAAK,OAAIA,EAAM5F,MAAMC,cAGjC4F,GAAYL,YAAO0D,GAAP1D,CAAH4D,MAGTC,GAAS7D,IAAOM,IAAVwD,MAKNC,GAAc/D,YAAO0D,GAAP1D,CAAHgE,KAIb,SAAA5D,GAAK,OAAIA,EAAM6D,QACbC,YADOC,MAEPD,YAFOE,QAKPC,GAAarE,YAAO0D,GAAP1D,CAAHsE,MAIVC,GAAWvE,YAAOqE,GAAPrE,CAAHwE,MAMRC,GAAWzE,YAAOqE,GAAPrE,CAAH0E,MAKCC,GAnFD,SAACvE,GACb,IAAMwE,EXmBD,SAA4BC,EAAMC,GACvC,IACMC,EAAY,IAAI5G,KAAK0G,EADRC,EAAQ,EACkB,GAE7C,OAAOlJ,EAAWmJ,EADDvJ,IAAQ8C,WAAWyG,IWtBvBC,CAAmB5E,EAAMyE,KAAMzE,EAAM0E,OAC1C1I,EAAa2E,qBAAWrC,GAAxBtC,SACR6I,QAAQC,IAAI9I,GACZ,IAAM+I,EAAkB/E,EAAM0E,MAAQ,EAChCM,EAAmBhJ,EAASiJ,OAAO,SAAA9H,GAAI,OAAI/B,IAAQ8J,SAAS/H,EAAKjC,QAAU6J,IAC3EI,EAAkB,GAyBxB,OAxBAX,EAAK/H,QAAQ,SAAAvB,GACX,IAAMgC,EAAQ8H,EAAiBC,OAAO,SAAA9H,GAAI,OAAI/B,IAAQgK,UAAUlK,EAAMiC,EAAKjC,QACrEmK,EAAU,CACdnK,KAAMA,EACNoK,GAAI,GACJ3I,GAAI,GACJ4I,UAAWnK,IAAQmB,UAAUrB,IAE/BgC,EAAMT,QAAQ,SAAAU,GACZ,GAAKA,EAAKd,OAAV,CAIA,IAAMmJ,EAAWpK,IAAQqK,SAAStI,EAAKjC,MAAQ,GAAM,KAAO,KACxDmK,EAAQG,GACVH,EAAQG,IAAR,KAAAtC,OAAyB/F,EAAKf,SAE9BiJ,EAAQG,GAAWrI,EAAKf,WAI5B+I,EAAgBzI,KAAK2I,KAIrB7F,EAAAC,EAAAC,cAACgG,GAAD,KACElG,EAAAC,EAAAC,cAAC+D,GAAD,KAASzD,EAAM0E,MAAf,UACCS,EAAgBvJ,IAAI,SAAA+J,GAAI,OACvBnG,EAAAC,EAAAC,cAACiE,GAAD,CAAa3I,IAAK2K,EAAKzK,KAAM2I,QAAS8B,EAAKJ,WACzC/F,EAAAC,EAAAC,cAACyE,GAAD,KAAWwB,EAAKzK,KAAK0K,UAArB,IAAiC3K,EAAW0K,EAAKzK,KAAM,MAAvD,KACAsE,EAAAC,EAAAC,cAAC2E,GAAD,KAAWsB,EAAKL,IAChB9F,EAAAC,EAAAC,cAAC2E,GAAD,KAAWsB,EAAKhJ,8ICrC1B,IAaMsD,GAAYL,IAAOM,IAAV2F,MAMAC,GAnBE,WAAM,IACb7G,EAAS0B,qBAAWvC,GAApBa,KACF8G,EAAa3K,IAAQ4K,2BAA2B/G,EAAKvD,QAASuD,EAAKxD,WACnEwK,EAAa7K,IAAQ6C,aAAagB,EAAKxD,WACvCyK,EAAS5L,EAAM,EAAGyL,GACrBnK,IAAI,SAAAK,GACH,IAAMyI,EAAQtJ,IAAQ+C,UAAU8H,EAAYhK,GAC5C,OAAQuD,EAAAC,EAAAC,cAACyG,GAAD,CAAOnL,IAAK0J,EAAM0B,UAAW3B,KAAMC,EAAM2B,cAAe3B,MAAOA,EAAMQ,WAAa,MAG9F,OAAQ1F,EAAAC,EAAAC,cAAC4G,GAAD,KAAYJ,+TCRtB,IAmBMjG,GAAYL,IAAOM,IAAVqG,MAKTlE,GAAczC,IAAOM,IAAVsG,MAIXC,GAAkB7G,IAAOM,IAAVwG,MAKNC,GAjCH,WACV,OACEnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAexM,MAAOA,GACpBoF,EAAAC,EAAAC,cAACmH,EAAD,KACErH,EAAAC,EAAAC,cAACoH,GAAD,KACEtH,EAAAC,EAAAC,cAACqH,GAAD,KACEvH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAACuH,GAAD,MACAzH,EAAAC,EAAAC,cAACwH,GAAD,OAEF1H,EAAAC,EAAAC,cAAC+G,GAAD,KACEjH,EAAAC,EAAAC,cAACyH,GAAD,WCRQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlI,EAAAC,EAAAC,cAACiI,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c7812cdf.chunk.js","sourcesContent":["const theme = {\n  borderColor: '#666'\n};\n\nexport default theme;","import dateFns from 'date-fns';\r\nimport ja from 'date-fns/locale/ja';\r\n\r\nexport function range (start, end, seed = 1) {\r\n  const length = (end - start + seed) / seed;\r\n  return Array.from({ length: length }, (value, key) => start + (seed * key));\r\n};\r\n\r\nexport function padZero (number, length = 2) {\r\n  return (\"00\" + number).slice(-length);\r\n}\r\n\r\nexport function formatDate(date, formatString) {\r\n  // localeはProviderで渡したい\r\n  return dateFns.format(date, formatString, {locale: ja});\r\n}\r\n\r\nexport function createDays(beginDate, endDate) {\r\n  const diffDays = dateFns.differenceInCalendarDays(endDate, beginDate);\r\n  const days = range(0, diffDays).map(day => {\r\n    return dateFns.addDays(beginDate, day);\r\n  });\r\n\r\n  return days;\r\n}\r\n\r\nexport function createOneMonthDays(year, month) {\r\n  const monthIndex = month - 1;\r\n  const firstDate = new Date(year, monthIndex, 1);\r\n  const lastDate = dateFns.endOfMonth(firstDate);\r\n  return createDays(firstDate, lastDate);\r\n}","import dateFns from 'date-fns';\nimport { createDays, range } from './Util';\n\nconst ScheduleGenerator = function (beginDate, endDate) {\n  const schedule = function (beginDate, endDate) {\n    const initialDurationValue = 0.0;\n    const durationUnit = 0.5;\n    let schedule = [];\n    let index = null;\n    let current = null;\n    const createSchedule = day => {\n      return {\n        date: day,\n        content: '',\n        isShow: false\n      };\n    };\n\n    const next = function () {\n      if (index === null) {\n        index = -1;\n      }\n\n      index++;\n      current = schedule[index];\n    };\n\n    const nextFree = function () {\n      next();\n      if (dateFns.isWeekend(current.date)) {\n        nextFree();\n        return;\n      }\n\n      if (current.content !== '') {\n        nextFree();\n        return;\n      }\n    };\n\n    return {\n      init: function () {\n        schedule = [];\n        createDays(beginDate, endDate).forEach(day => {\n          schedule.push(createSchedule(day));\n          const pm = dateFns.addHours(day, 24 * durationUnit);\n          schedule.push(createSchedule(pm));\n        });\n\n        index = null;\n      },\n      add: function (content, duration) {\n        range(initialDurationValue, (duration - durationUnit), durationUnit).forEach(seed => {\n          nextFree();\n          current.content = content;\n          if (seed === initialDurationValue) {\n            current.isShow = true;\n          }\n        });\n      },\n      forEach: function (closure) {\n        for (let i = 0; i < schedule.length; i++) {\n          closure(schedule[i], i);\n        }\n      }\n    }\n  }(beginDate, endDate);\n\n  return {\n    generate: function (tasks) {\n      schedule.init();\n      tasks.forEach(task => {\n        schedule.add(task.content, task.duration);\n      });\n    },\n    getSchedule: function () {\n      const list = [];\n      schedule.forEach(item => {\n        list.push(Object.assign({}, item));\n      });\n\n      return list;\n    }\n  };\n};\n\nexport default ScheduleGenerator;","import React, { useState, useEffect } from 'react';\nimport dateFns from 'date-fns';\nimport ScheduleGenerator from '../ScheduleGenerator';\nexport const TasksContext = React.createContext([]);\nexport const TasksProvider = TasksContext.Provider;\n\nconst today = new Date();\nconst beginDate = dateFns.startOfMonth(today);\nconst endDate = dateFns.endOfMonth(dateFns.addMonths(today, 2));\n\nconst termInitilState = {\n  beginDate: beginDate,\n  endDate: endDate,\n};\nexport const TermContext = React.createContext(termInitilState);\nexport const TermProvider = TermContext.Provider;\n\nexport const ScheduleContext = React.createContext([]);\nexport const ScheduleProvider = ScheduleContext.Provider;\n\nexport const Provider = ({ children }) => {\n  const [tasks, setTasks] = useState([]);\n  const [term, setTerm] = useState(termInitilState);\n  const [schedule, setSchedule] = useState([]);\n\n  useEffect(() => {\n    const scheduleGenerator = ScheduleGenerator(term.beginDate, term.endDate);\n    scheduleGenerator.generate(tasks);\n    setSchedule(scheduleGenerator.getSchedule());\n  }, [term, tasks]);\n\n  return (\n    <ScheduleProvider value={{ schedule }}>\n      <TermProvider value={{ term, setTerm }}>\n        <TasksProvider value={{ tasks, setTasks }}>\n            {children}\n        </TasksProvider>\n      </TermProvider>\n    </ScheduleProvider>\n  );\n}","import React from 'react';\nimport styled from 'styled-components'\n\nconst Input = (props) => {\n  return (<Base {...props} />);\n}\n\nconst Base = styled.input`\n  font-size: 14px;\n  height: 26px;\n  width: 100%;\n`;\n\nexport default Input;","import React, { useContext } from 'react';\nimport styled from 'styled-components'\nimport { TermContext } from '../context';\nimport { formatDate } from '../Util';\nimport Input from './Input';\n\nconst Term = () => {\n  const { term, setTerm } = useContext(TermContext);\n  const handleChange = (name) => (e) => {\n    const value = new Date(e.target.value);\n    setTerm(prevState => {\n      // reducer使うべきなんでしょうね\n      const updatedValues = {...prevState};\n      updatedValues[name] = value;\n      return updatedValues;\n    });\n  }\n\n  return (<Container>\n    <div>\n      <Label>開始日：</Label>\n      <InputWrapper>\n        <Input type='date' defaultValue={formatDate(term.beginDate, 'YYYY-MM-DD')} onChange={handleChange('beginDate')} />\n      </InputWrapper>\n    </div>\n    <div>\n      <Label>終了日：</Label>\n      <InputWrapper>\n        <Input type='date' defaultValue={formatDate(term.endDate, 'YYYY-MM-DD')} onChange={handleChange('endDate')} />\n      </InputWrapper>\n    </div>\n  </Container>);\n}\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  div {\n    display: flex;\n  }\n`;\n\nconst Label = styled.span`\n  flex: 0 0 70px;\n  display: block;\n`;\n\nconst InputWrapper = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport default Term;","import React from 'react';\n\nexport const currentTaskInitialState = {\n  content: '',\n  duration: 0.5\n};\nexport const CurrentTaskContext = React.createContext(currentTaskInitialState);","import React, { useContext } from 'react';\nimport { CurrentTaskContext } from '../context/CurrentTaskContext';\nimport Input from './Input';\n\nconst TaskContent = props => {\n  const { currentTask, setCurrentTask } = useContext(CurrentTaskContext);\n  const handleChange = e => {\n    const content = e.target.value;\n    setCurrentTask(prevState => {\n      return { ...prevState, content };\n    });\n  }\n\n  return (<Input type='text' value={currentTask.content} onChange={handleChange} />);\n}\n\nexport default TaskContent;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Select = (props) => {\n  return (<Base {...props} />);\n}\n\nconst Base = styled.select`\n  padding: 8px;\n  height: 32px;\n  font-size: 14px;\n`;\n\nexport default Select;","import React, { useContext } from 'react';\nimport { CurrentTaskContext } from '../context/CurrentTaskContext';\nimport { range } from '../Util';\nimport Select from './Select';\n\nconst Durations = props => {\n  const { currentTask, setCurrentTask } = useContext(CurrentTaskContext);\n  const handleChange = e => {\n    const duration = e.target.value;\n    setCurrentTask(prevState => {\n      return {...prevState, duration};\n    });\n  }\n\n  return  (<Select value={currentTask.duration} onChange={handleChange}>\n    {range(0.5, 5.0, 0.5).map(val => (\n      <option key={val} value={val.toFixed(1)}>{val.toFixed(1)}</option>))}\n  </Select>);\n}\n\nexport default Durations;","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components'\r\nimport { TasksContext } from '../context';\r\nimport { CurrentTaskContext, currentTaskInitialState } from '../context/CurrentTaskContext';\r\nimport TaskContent from './TaskContent';\r\nimport Durations from './Durations';\r\n\r\nconst TaskForm = () => {\r\n  const [currentTask, setCurrentTask] = useState(currentTaskInitialState);\r\n  const { setTasks } = useContext(TasksContext);\r\n  const handleClick = () => {\r\n    setTasks(prevState => {\r\n      return [...prevState, currentTask];\r\n    });\r\n    setCurrentTask(currentTaskInitialState);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <CurrentTaskContext.Provider value={{ currentTask, setCurrentTask }}>\r\n        <FormWrapper>\r\n          <Input>\r\n            <TaskContent context={CurrentTaskContext} />\r\n          </Input>\r\n          <Input>\r\n            <Durations context={CurrentTaskContext} />\r\n          </Input>\r\n        </FormWrapper>\r\n      </CurrentTaskContext.Provider>\r\n      <div>\r\n        <Button onClick={() => handleClick()}>登録</Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst Input = styled.div`\r\n  flex: 1 1 auto;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 3px 8px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default TaskForm;","import React, { useContext } from 'react';\nimport { TasksContext } from '../context';\n\nconst TaskList = () => {\n  const { tasks } = useContext(TasksContext);\n  const taskItems = tasks.map((task, index) =>\n    <div key={index}>{task.content} : {task.duration}</div>);\n\n  return (\n    <div>\n      <div>{taskItems}</div>\n    </div>\n  );\n}\n\nexport default TaskList;","import React, { useContext } from 'react';\nimport styled, { css } from 'styled-components'\nimport { ScheduleContext } from '../context';\nimport { createOneMonthDays, formatDate } from '../Util';\nimport dateFns from 'date-fns';\n\nconst Month = (props) => {\n  const days = createOneMonthDays(props.year, props.month);\n  const { schedule } = useContext(ScheduleContext);\n  console.log(schedule);\n  const javascriptMonth = props.month - 1;\n  const filteredSchedule = schedule.filter(task => dateFns.getMonth(task.date) === javascriptMonth);\n  const monthlySchedule = [];\n  days.forEach(date => {\n    const tasks = filteredSchedule.filter(task => dateFns.isSameDay(date, task.date));\n    const dayPlan = {\n      date: date,\n      am: '',\n      pm: '',\n      isHoliday: dateFns.isWeekend(date)\n    };\n    tasks.forEach(task => {\n      if (!task.isShow) {\n        return;\n      }\n\n      const halfday = (dateFns.getHours(task.date) < 12) ? 'am' : 'pm';\n      if (dayPlan[halfday]) {\n        dayPlan[halfday] += `, ${task.content}`;\n      } else {\n        dayPlan[halfday] = task.content;\n      }\n    });\n\n    monthlySchedule.push(dayPlan);\n  });\n\n  return (\n    <Container>\n      <Header>{props.month}月</Header>\n      {monthlySchedule.map(plan => (\n        <DateWrapper key={plan.date} holiday={plan.isHoliday}>\n          <DateCell>{plan.date.getDate()}({formatDate(plan.date, 'dd')})</DateCell>\n          <PlanCell>{plan.am}</PlanCell>\n          <PlanCell>{plan.pm}</PlanCell>\n        </DateWrapper>))\n      }\n    </Container >\n  );\n}\n\nconst Border = styled.div`\n  border-style: solid;\n  border-width: 1px;\n  border-color: ${props => props.theme.borderColor};\n`;\n\nconst Container = styled(Border)`\n`;\n\nconst Header = styled.div`\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst DateWrapper = styled(Border)`\n  display: flex;\n  border-width: 1px 0 0 0;\n\n  ${props => props.holiday\n    ? css`background-color: #eee;`\n    : css`background-color: white;`}\n`;\n\nconst StyledCell = styled(Border)`\n  padding: 2px 5px;\n`;\n\nconst DateCell = styled(StyledCell)`\n  border-width: 0;\n  width: 50px;\n  text-align: right;\n`;\n\nconst PlanCell = styled(StyledCell)`\n  border-width: 0 0 0 1px;\n  min-width: 130px;\n`;\n\nexport default Month;","import React, { useContext } from 'react';\nimport styled from 'styled-components'\nimport { TermContext } from '../context';\nimport dateFns from 'date-fns';\nimport { range } from '../Util';\nimport Month from './Month';\n\nconst Calendar = () => {\n  const { term } = useContext(TermContext);\n  const diffMonths = dateFns.differenceInCalendarMonths(term.endDate, term.beginDate);\n  const beginMonth = dateFns.startOfMonth(term.beginDate);\n  const months = range(0, diffMonths)\n    .map(index => {\n      const month = dateFns.addMonths(beginMonth, index);\n      return (<Month key={month.getTime()} year={month.getFullYear()} month={month.getMonth() + 1} />)\n    });\n\n  return (<Container>{months}</Container>);\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: baseline;\n  width: 100%;\n`;\n\nexport default Calendar;","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme';\nimport { Provider } from './context';\nimport Term from './components/Term';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport Calendar from './components/Calendar';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider>\n        <Container>\n          <FormWrapper>\n            <Term />\n            <TaskForm />\n            <TaskList />\n          </FormWrapper>\n          <CalendarWrapper>\n            <Calendar />\n          </CalendarWrapper>\n        </Container>\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nconst FormWrapper = styled.div`\n  flex: 0 0 240px;\n`;\n\nconst CalendarWrapper = styled.div`\n  margin: 0 10px;\n  overflow-x: auto;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}